# playbooks/verify.yml - Updated for dedicated kamal user
---
# verify.yml - Playbook to verify server configuration for Kamal deployments

- name: Verify Kamal server configuration
  hosts: kamal_servers
  become: false
  gather_facts: true

  tasks:
    - name: Check if kamal user exists
      getent:
        database: passwd
        key: "{{ kamal_user }}"
      register: kamal_user_check
      ignore_errors: true
      tags: user

    - name: Display kamal user status
      debug:
        msg: "Kamal user '{{ kamal_user }}' {{ 'exists' if kamal_user_check.ansible_facts.getent_passwd else 'does not exist' }}"
      tags: user

    - name: Check Docker access for kamal user
      command: docker ps
      register: docker_ps
      changed_when: false
      ignore_errors: true
      become_user: "{{ kamal_user }}"
      tags: docker

    - name: Display Docker status for kamal user
      debug:
        msg: "Docker is {{ 'accessible and working correctly' if docker_ps.rc == 0 else 'not accessible or not working' }} for {{ kamal_user }} user"
      when: docker_ps.rc is defined
      tags: docker

    - name: Check Kamal CLI installation
      command: kamal --version
      register: kamal_version_check
      changed_when: false
      ignore_errors: true
      become_user: "{{ kamal_user }}"
      tags: kamal

    - name: Display Kamal CLI status
      debug:
        msg: "{{ kamal_version_check.stdout if kamal_version_check.rc == 0 else 'Kamal CLI is not installed or not accessible' }}"
      when: kamal_version_check.rc is defined
      tags: kamal

    - name: Check Docker Compose installation
      command: docker-compose --version
      register: docker_compose_version
      changed_when: false
      ignore_errors: true
      become_user: "{{ kamal_user }}"
      tags: docker

    - name: Display Docker Compose status
      debug:
        msg: "{{ docker_compose_version.stdout if docker_compose_version.rc == 0 else 'Docker Compose is not installed or not accessible' }}"
      when: docker_compose_version.rc is defined
      tags: docker

    - name: Check UFW firewall status
      become: true
      command: ufw status
      register: ufw_status
      changed_when: false
      ignore_errors: true
      tags: firewall

    - name: Display UFW status
      debug:
        msg: "{{ ufw_status.stdout if ufw_status.rc == 0 else 'UFW is not installed or accessible' }}"
      when: ufw_status.rc is defined
      tags: firewall

    - name: Check kamal user directory structure
      stat:
        path: "{{ item }}"
      register: kamal_dir_check
      loop:
        - "{{ kamal_user_home }}"
        - "{{ kamal_apps_dir }}"
        - "{{ kamal_user_home }}/.ssh"
        - "{{ kamal_user_home }}/.kamal"
        - "{{ kamal_user_home }}/logs"
      become_user: "{{ kamal_user }}"
      tags: structure

    - name: Display kamal directory structure status
      debug:
        msg: "Directory {{ item.item }} {{ 'exists' if item.stat.exists else 'does not exist' }}"
      loop: "{{ kamal_dir_check.results }}"
      tags: structure

    - name: Check SSH key configuration for kamal user
      stat:
        path: "{{ kamal_user_home }}/.ssh/authorized_keys"
      register: kamal_ssh_keys
      become_user: "{{ kamal_user }}"
      tags: ssh

    - name: Display SSH key status for kamal user
      debug:
        msg: "SSH authorized_keys file {{ 'exists' if kamal_ssh_keys.stat.exists else 'does not exist' }} for {{ kamal_user }} user"
      tags: ssh

    - name: Check kamal user sudo permissions
      command: sudo -l -U {{ kamal_user }}
      register: kamal_sudo_check
      changed_when: false
      ignore_errors: true
      become: true
      tags: permissions

    - name: Display kamal sudo permissions
      debug:
        msg: "{{ kamal_sudo_check.stdout_lines if kamal_sudo_check.rc == 0 else 'No sudo permissions or error checking permissions' }}"
      when: kamal_sudo_check.stdout_lines is defined
      tags: permissions

    - name: Check if kamal user is in docker group
      command: groups {{ kamal_user }}
      register: kamal_groups
      changed_when: false
      ignore_errors: true
      tags: permissions

    - name: Display kamal user groups
      debug:
        msg: "{{ kamal_user }} groups: {{ kamal_groups.stdout if kamal_groups.rc == 0 else 'Error getting groups' }}"
      tags: permissions

    - name: Check system resources
      debug:
        msg:
          - "Available memory: {{ ansible_memtotal_mb }}MB"
          - "Available disk space: {{ ansible_mounts | selectattr('mount', 'equalto', '/') | map(attribute='size_available') | first | int // 1024 // 1024 }}MB"
          - "CPU cores: {{ ansible_processor_vcpus }}"
      tags: resources

    - name: Check swap configuration
      command: swapon --show
      register: swap_status
      changed_when: false
      ignore_errors: true
      tags: system

    - name: Display swap status
      debug:
        msg: "{{ swap_status.stdout if swap_status.rc == 0 and swap_status.stdout else 'No swap configured' }}"
      tags: system

    - name: Check key system services
      systemd:
        name: "{{ item }}"
      register: service_status
      loop:
        - docker
        - ssh
        - ufw
      ignore_errors: true
      become: true
      tags: services

    - name: Display services status
      debug:
        msg: "Service {{ item.item }} is {{ item.status.ActiveState | default('unknown') }}"
      loop: "{{ service_status.results }}"
      when: item.status is defined
      tags: services

    - name: Test SSH connection as kamal user
      local_action:
        module: command
        _raw_params: ssh -i ~/.ssh/kamal_deploy_key -o ConnectTimeout=5 -o StrictHostKeyChecking=no {{ kamal_user }}@{{ ansible_host }} "echo 'SSH connection successful'"
      register: ssh_test
      ignore_errors: true
      tags: connectivity

    - name: Display SSH connection test result
      debug:
        msg: "SSH connection as {{ kamal_user }}: {{ 'SUCCESS' if ssh_test.rc == 0 else 'FAILED - ' + ssh_test.stderr | default('Unknown error') }}"
      tags: connectivity

    - name: Summary
      debug:
        msg:
          - "=== Kamal Deployment Server Verification Summary ==="
          - "✓ Kamal user: {{ 'Created' if kamal_user_check.ansible_facts.getent_passwd else 'Missing' }} ({{ kamal_user }})"
          - "✓ Docker access: {{ 'Working' if docker_ps.rc == 0 else 'Not working' }}"
          - "✓ Kamal CLI: {{ 'Installed' if kamal_version_check.rc == 0 else 'Not installed' }}"
          - "✓ UFW Firewall: {{ 'Active' if ufw_status.rc == 0 and 'Status: active' in ufw_status.stdout else 'Inactive or not configured' }}"
          - "✓ Directory structure: {{ 'Complete' if kamal_dir_check.results | selectattr('stat.exists') | list | length == 5 else 'Incomplete' }}"
          - "✓ SSH access: {{ 'Working' if ssh_test.rc == 0 else 'Not working' }}"
          - "✓ Docker group membership: {{ 'Yes' if 'docker' in kamal_groups.stdout else 'No' }}"
          - "✓ Server is {{ 'READY' if (docker_ps.rc == 0 and kamal_version_check.rc == 0 and ssh_test.rc == 0) else 'NOT READY' }} for Kamal deployments"
      tags: always
